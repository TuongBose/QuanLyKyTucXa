USE master
CREATE DATABASE QL_KYTUCXA
GO

USE QL_KYTUCXA
GO

CREATE TABLE DAYPHONG
(
	ID_DAY INT NOT NULL IDENTITY(1, 1),
	MADAYPHONG CHAR(5) NOT NULL,
	DAXOA BIT CONSTRAINT DF_DAXOA_DAYPHONG DEFAULT 0,

	CONSTRAINT PK_DAYPHONG PRIMARY KEY (ID_DAY),

	CONSTRAINT CK_DAXOA_DAYPHONG CHECK (DAXOA IN (0, 1))
)

CREATE TABLE PHONG
(
	ID_PHONG INT NOT NULL IDENTITY(1, 1),
	ID_DAY INT NOT NULL,
	MAPHONG CHAR(5) NOT NULL,
	TAIKHOAN NVARCHAR(10) NOT NULL,
	MATKHAU NVARCHAR(40) NOT NULL,
	SOLUONGSV INT,
	DONGIA INT,
	TINHTRANG NVARCHAR(40),
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_PHONG DEFAULT 0,
	MOTAKHAC NVARCHAR(40),
	DAXOA BIT CONSTRAINT DF_DAXOA_PHONG DEFAULT 0,

	CONSTRAINT PK_PHONG PRIMARY KEY (ID_PHONG),
	CONSTRAINT FK_PHONG_DAYPHONG FOREIGN KEY (ID_DAY) REFERENCES DAYPHONG(ID_DAY),

	CONSTRAINT CK_DAXOA_PHONG CHECK (DAXOA IN (0, 1)),
	CONSTRAINT CK_TRANGTHAI_PHONG CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE DONGIA
(
	ID_DONGIA INT NOT NULL IDENTITY(1, 1),
	MADONGIA CHAR(5) NOT NULL,
	DONGIADIEN INT,
	DONGIANUOC INT,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_DONGIA DEFAULT 0,
	NGAYAPDUNG DATETIME,
	DAXOA BIT CONSTRAINT DF_DAXOA_DONGIA DEFAULT 0,

	CONSTRAINT PK_DONGIA PRIMARY KEY (ID_DONGIA),

	CONSTRAINT CK_DAXOA_DONGIA CHECK (DAXOA IN (0, 1)),
	CONSTRAINT CK_TRANGTHAI_DONGIA CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE CONGTODIEN
(
	ID_DIEN INT NOT NULL IDENTITY(1, 1),
	ID_PHONG INT NOT NULL,
	CHISODAU INT,
	CHISOCUOI INT,
	THANG INT,
	NAM INT,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_CONGTODIEN DEFAULT 0,

	CONSTRAINT PK_CONGTODIEN PRIMARY KEY (ID_DIEN),
	CONSTRAINT FK_CONGTODIEN_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),
	CONSTRAINT UNI_ID_DIEN_ID_PHONG_CONGTODIEN UNIQUE (ID_DIEN,ID_PHONG),
	CONSTRAINT UNI_ID_PHONG_CONGTODIEN UNIQUE (ID_PHONG),

	CONSTRAINT CK_TRANGTHAI_CONGTODIEN CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE CONGTONUOC
(
	ID_NUOC INT NOT NULL IDENTITY(1, 1),
	ID_PHONG INT NOT NULL,
	CHISODAU INT,
	CHISOCUOI INT,
	THANG INT,
	NAM INT,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_CONGTONUOC DEFAULT 0,

	CONSTRAINT PK_CONGTONUOC PRIMARY KEY (ID_NUOC),
	CONSTRAINT FK_CONGTONUOC_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),
	CONSTRAINT UNI_ID_NUOC_ID_PHONG_CONGTONUOC UNIQUE (ID_NUOC,ID_PHONG),
	CONSTRAINT UNI_ID_PHONG_CONGTONUOC UNIQUE (ID_PHONG),

	CONSTRAINT CK_TRANGTHAI_CONGTONUOC CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE HOADON_DIENNUOC
(
	ID_HDDN INT NOT NULL IDENTITY(1, 1),
	ID_PHONG INT NOT NULL,
	ID_DONGIA INT NOT NULL,
	ID_DIEN INT NOT NULL,
	ID_NUOC INT NOT NULL,
	THANG INT,
	NAM INT,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_HOADON_DIENNUOC DEFAULT 0,

	CONSTRAINT PK_HOADON_DIENNUOC PRIMARY KEY (ID_HDDN),
	CONSTRAINT FK_HOADON_DIENNUOC_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),
	CONSTRAINT FK_HOADON_DIENNUOC_DONGIA FOREIGN KEY (ID_DONGIA) REFERENCES DONGIA(ID_DONGIA),
	CONSTRAINT FK_HOADON_DIENNUOC_CONGTODIEN FOREIGN KEY (ID_DIEN) REFERENCES CONGTODIEN(ID_DIEN),
	CONSTRAINT FK_HOADON_DIENNUOC_CONGTONUOC FOREIGN KEY (ID_NUOC) REFERENCES CONGTONUOC(ID_NUOC),

	CONSTRAINT CK_TRANGTHAI_HOADON_DIENNUOC CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE HOADON_PHONG
(
	ID_HDP INT NOT NULL IDENTITY(1, 1),
	ID_PHONG INT NOT NULL,
	ID_DONGIA INT NOT NULL,
	NAM INT,
	KY INT,
	THANHTIEN INT,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_HOADON_PHONG DEFAULT 0,
	DAXOA BIT CONSTRAINT DF_DAXOA_HOADON_PHONG DEFAULT 0,

	CONSTRAINT PK_HOADON_PHONG PRIMARY KEY (ID_HDP),
	CONSTRAINT FK_HOADON_PHONG_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),
	CONSTRAINT FK_HOADON_PHONG_DONGIA FOREIGN KEY (ID_DONGIA) REFERENCES DONGIA(ID_DONGIA),

	CONSTRAINT CK_DAXOA_HOADON_PHONG CHECK (DAXOA IN (0, 1)),
	CONSTRAINT CK_TRANGTHAI_HOADON_PHONG CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE HOTRO
(
	ID_HOTRO INT NOT NULL IDENTITY(1, 1),
	ID_PHONG INT NOT NULL,
	NOIDUNG NVARCHAR(40),
	NGAYGUI DATETIME,
	TRANGTHAI BIT CONSTRAINT DF_TRANGTHAI_HOTRO DEFAULT 0,
	DAXOA BIT CONSTRAINT DF_DAXOA_HOTRO DEFAULT 0,

	CONSTRAINT PK_HOTRO PRIMARY KEY (ID_HOTRO),
	CONSTRAINT FK_HOTRO_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),

	CONSTRAINT CK_DAXOA_HOTRO CHECK (DAXOA IN (0, 1)),
	CONSTRAINT CK_TRANGTHAI_HOTRO CHECK (TRANGTHAI IN (0, 1))
)

CREATE TABLE CANBO
(
	ID_CANBO INT NOT NULL IDENTITY(1, 1),
	MACB CHAR(5) NOT NULL,
	TAIKHOAN CHAR(5) NOT NULL,
	MATKHAU NVARCHAR(40),
	TENCB NVARCHAR(40),
	GIOITINH BIT,
	CMND_CCCD INT,
	DIACHI NVARCHAR(40),
	EMAIL VARCHAR(40),
	SDT NVARCHAR(15),
	QUANTRI BIT CONSTRAINT DF_QUANTRI_CANBO DEFAULT 0,
	DAXOA BIT CONSTRAINT DF_DAXOA_CANBO DEFAULT 0,

	CONSTRAINT PK_CANBO PRIMARY KEY (ID_CANBO),

	CONSTRAINT CK_GIOITINH_CANBO CHECK (GIOITINH IN (0, 1)),
	CONSTRAINT CK_QUANTRI_CANBO CHECK (QUANTRI IN (0, 1)),
	CONSTRAINT CK_DAXOA_CANBO CHECK (DAXOA IN (0, 1))
)

CREATE TABLE NHANVIEN
(
	ID_NHANVIEN INT NOT NULL IDENTITY(1, 1),
	MANV CHAR(5) NOT NULL,
	TAIKHOAN CHAR(5) NOT NULL,
	MATKHAU NVARCHAR(40),
	TENNV NVARCHAR(40),
	GIOITINH BIT,
	CMND_CCCD INT,
	DIACHI NVARCHAR(40),
	EMAIL VARCHAR(40),
	SDT NVARCHAR(15),
	DAXOA BIT CONSTRAINT DF_DAXOA_NHANVIEN DEFAULT 0,

	CONSTRAINT PK_NHANVIEN PRIMARY KEY (ID_NHANVIEN),

	CONSTRAINT CK_GIOITINH_NHANVIEN CHECK (GIOITINH IN (0, 1)),
	CONSTRAINT CK_DAXOA_NHANVIEN CHECK (DAXOA IN (0, 1))
)

CREATE TABLE SINHVIEN
(
	MASV CHAR(5) NOT NULL,
	ID_PHONG INT NOT NULL,
	TENSV NVARCHAR(40),
	GIOITINH BIT,
	CMND_CCCD INT,
	EMAIL VARCHAR(40),
	SDT NVARCHAR(15),
	NGAYLAMHOPDONG DATETIME,
	DAXOA BIT CONSTRAINT DF_DAXOA_SINHVIEN DEFAULT 0,

	CONSTRAINT PK_SINHVIEN PRIMARY KEY (MASV),
	CONSTRAINT FK_SINHVIEN_PHONG FOREIGN KEY (ID_PHONG) REFERENCES PHONG(ID_PHONG),

	CONSTRAINT CK_GIOITINH_SINHVIEN CHECK (GIOITINH IN (0, 1)),
	CONSTRAINT CK_DAXOA_SINHVIEN CHECK (DAXOA IN (0, 1))
)

CREATE TABLE THANNHAN
(
	MASV CHAR(5) NOT NULL,
	TENTN NVARCHAR(40),
	SDT NVARCHAR(15),
	QUANHE NVARCHAR(30),
	CONSTRAINT FK_THANNHAN_SINHVIEN FOREIGN KEY (MASV) REFERENCES SINHVIEN(MASV)
)

--Nhập dữ liệu mẫu bảng DAYPHONG
INSERT INTO DAYPHONG (MADAYPHONG, DAXOA)
VALUES 
('DAY01', 0),
('DAY02', 0),
('DAY03', 0),
('DAY04', 0),
('DAY05', 0);

--Nhập liệu bàng Phong
INSERT INTO PHONG (ID_DAY, MAPHONG, TAIKHOAN, MATKHAU, SOLUONGSV, DONGIA, TINHTRANG, TRANGTHAI, MOTAKHAC, DAXOA)
VALUES 
(1, 'P101', 'user1', 'P@ssw0rd1', 4, 5000000, N'Đủ thiết bị', 0, N'Phòng 4 người', 0),
(1, 'P102', 'user2', 'W3lc0m3!', 2, 3000000, N'Phòng chưa được sơn lại', 0, N'Phòng 2 người', 0),
(2, 'P201', 'user3', 'S3cur3P@ss', 6, 7000000, N'Phòng thiếu ánh sáng', 0, N'Phòng 6 người', 0),
(2, 'P202', 'user4', 'H@ppyD@y', 3, 4500000, N'Phòng còn tốt', 0, N'Phòng 3 người', 0),
(3, 'P301', 'user5', 'R00mS@fe', 4, 5000000, N'Đủ vật dụng', 0, N'Phòng 4 người', 0),
(3, 'P302', 'user6', 'G00dL1fe', 2, 3000000, N'Thiếu nhiều', 0, N'Phòng 2 người', 0),
(4, 'P401', 'user7', 'MyR00m99', 5, 6000000, N'Phòng còn tốt', 0, N'Phòng 5 người', 0),
(4, 'P402', 'user8', 'L1v1ngW3ll', 3, 4500000, N'Phòng bị hư 1 bóng đèn', 0, N'Phòng 3 người', 0),
(5, 'P501', 'user9', 'S@f3St@y', 4, 5000000, N'Nước bị yếu', 0, N'Phòng 4 người', 0),
(5, 'P502', 'user10', 'C0mf0rtZ0n3', 2, 3000000, N'2 phòng ngủ', 0, N'Phòng 2 người', 0);

--Nhập liệu bảng đơn giá
INSERT INTO DONGIA (MADONGIA, DONGIADIEN, DONGIANUOC, NGAYAPDUNG, DAXOA, TRANGTHAI)
VALUES 
('DG01', 2500, 3500, '2020-01-01', 0, 1),
('DG02', 2600, 3600, '2021-04-01', 0, 0),
('DG03', 2700, 3700, '2022-06-01', 0, 0),
('DG04', 2800, 3800, '2023-08-01', 0, 0),
('DG05', 2900, 3900, '2024-010-01', 0, 0);

--Nhập liệu bảng CONGTODIEN 
INSERT INTO CONGTODIEN (ID_PHONG, CHISODAU, CHISOCUOI, THANG, NAM, TRANGTHAI)
VALUES 
(1, 0, 150, 10, 2024, 0),
(2, 0, 120, 10, 2024, 0),
(3, 0, 250, 10, 2024, 0),
(4, 0, 200, 10, 2024, 0),
(5, 0, 230, 10, 2024, 0),
(6, 0, 100, 10, 2024, 0),
(7, 0, 270, 10, 2024, 0),
(8, 0, 210, 10, 2024, 0),
(9, 0, 160, 10, 2024, 0),
(10, 0, 130, 10, 2024, 0);

--Nhập liệu bảng công tơ nước
INSERT INTO CONGTONUOC (ID_PHONG, CHISODAU, CHISOCUOI, THANG, NAM, TRANGTHAI)
VALUES 
(1, 700, 800, 10, 2024, 0),
(2, 500, 700, 10, 2024, 0),
(3, 1200, 1300, 10, 2024, 0),
(4, 900, 1100, 10, 2024, 0),
(5, 800, 900, 10, 2024, 0),
(6, 300, 400, 10, 2024, 0),
(7, 1300, 1400, 10, 2024, 0),
(8, 600, 700, 10, 2024, 0),
(9, 900, 1000, 10, 2024, 0),
(10, 200, 300, 10, 2024, 0);

--Nhập liệu bảng HOADON_DIENNUOC
-- Nhập liệu mẫu bảng HOADON_DIENNUOC
INSERT INTO HOADON_DIENNUOC (ID_PHONG, ID_DONGIA, ID_DIEN, ID_NUOC, THANG, NAM, TRANGTHAI)
VALUES 
(1, 1, 1, 1, 10, 2024, 0),
(2, 2, 2, 2, 10, 2024, 0),
(3, 3, 3, 3, 10, 2024, 0),
(4, 4, 4, 4, 10, 2024, 0),
(5, 5, 5, 5, 10, 2024, 0),
(6, 1, 6, 6, 10, 2024, 0),
(7, 2, 7, 7, 10, 2024, 0),
(8, 3, 8, 8, 10, 2024, 0),
(9, 4, 9, 9, 10, 2024, 0),
(10, 5, 10, 10, 10, 2024, 0);

--Nhập liệu mẫu bảng HOADON_PHONG
INSERT INTO HOADON_PHONG (ID_PHONG, ID_DONGIA, NAM, KY, THANHTIEN, TRANGTHAI, DAXOA)
VALUES 
(1, 1, 2024, 10, 2500000, 0, 0),  
(2, 2, 2024, 10, 1500000, 0, 0), 
(3, 3, 2024, 10, 2800000, 0, 0),  
(4, 4, 2024, 10, 2000000, 0, 0),  
(5, 5, 2024, 10, 2200000, 0, 0),  
(6, 1, 2024, 10, 1800000, 0, 0),  
(7, 2, 2024, 10, 2500000, 0, 0),  
(8, 3, 2024, 10, 2700000, 0, 0),  
(9, 4, 2024, 10, 2300000, 0, 0),  
(10, 5, 2024, 10, 1900000, 0, 0);  

--Nhập dữ liệu bảng Hỗ trợ
INSERT INTO HOTRO (ID_PHONG, NOIDUNG, NGAYGUI, TRANGTHAI, DAXOA)
VALUES 
(1, N'Cần sửa điện', '2024-10-01', 0, 0),
(2, N'Nước rò rỉ', '2024-10-02', 0, 0),
(3, N'Yêu cầu vệ sinh phòng', '2024-10-03', 0, 0),
(4, N'Cần thay bóng đèn', '2024-10-04', 0, 0),
(5, N'Báo hỏng điều hòa', '2024-10-05', 0, 0),
(6, N'Phòng có mùi hôi', '2024-10-06', 0, 0),
(7, N'Cần thay khóa cửa', '2024-10-07', 0, 0),
(8, N'Sửa vòi nước', '2024-10-08', 0, 0),
(9, N'Yêu cầu lắp thêm bóng đèn', '2024-10-09', 0, 0),
(10, N'Cần dọn dẹp phòng', '2024-10-10', 0, 0),
(1, N'Yêu cầu kiểm tra an toàn điện', '2024-10-11', 0, 0),
(2, N'Nước nóng không hoạt động', '2024-10-12', 0, 0),
(3, N'Phòng cần bảo trì điều hòa', '2024-10-13', 0, 0),
(4, N'Kiểm tra mạng internet', '2024-10-14', 0, 0),
(5, N'Cần bổ sung đồ dùng sinh hoạt', '2024-10-15', 0, 0);

--Nhập dữ liệu bảng CanBo
INSERT INTO CANBO (MACB, TAIKHOAN, MATKHAU, TENCB, GIOITINH, CMND_CCCD, DIACHI, EMAIL, SDT, QUANTRI, DAXOA)
VALUES 
('CB01', 'adm1', 'Admin@123', N'Nguyễn Văn Dũng', 1, 151234, 'TP HCM', 'admin1@example.com', '098765432', 1, 0),
('CB02', 'adm2', 'Admin@456', N'Trần Thị Nga', 0, 987654, 'TP HCM', 'admin2@example.com', '012345678', 0, 0),
('CB03', 'adm3', 'Admin@789', N'Lê Văn An', 1, 125853, 'TP HCM', 'admin3@example.com', '087654321', 0, 0),
('CB04', 'adm4', 'Admin@321', N'Nguyễn Thị Mai', 0, 987432, 'TP HCM', 'admin4@example.com', '076542109', 0, 0),
('CB05', 'adm5', 'Admin@654', N'Phạm Văn Tùng', 1, 124584, 'TP HCM', 'admin5@example.com', '064321098', 0, 0);

--Nhập dữ liệu mẫu bảng NhanVien
INSERT INTO NHANVIEN (MANV, TAIKHOAN, MATKHAU, TENNV, GIOITINH, CMND_CCCD, DIACHI, EMAIL, SDT, DAXOA)
VALUES 
('NV01', 'st1', 'Staff@123', N'Nguyễn Văn Bình', 1, 05468, 'TPHCM', 'staff1@example.com', '01234567', 0),
('NV02', 'st2', 'Staff@456', N'Trần Thị Hoa', 0, 06521, 'TPHCM', 'staff2@example.com', '07654321', 0),
('NV03', 'st3', 'Staff@789', N'Nguyễn Thị Ngân', 0, 05689, 'TPHCM', 'staff3@example.com', '08765432', 0),
('NV04', 'st4', 'Staff@321', N'Nguyễn Văn Đại', 1, 05487, 'TPHCM', 'staff4@example.com', '09876543', 0),
('NV05', 'st5', 'Staff@654', N'Trần Công Minh', 1, 01654, 'TPHCM', 'staff5@example.com', '01234560', 0);

--Nhập dữ liệu mẫu bảng Sinh Vien
INSERT INTO SINHVIEN (MASV, ID_PHONG, TENSV, GIOITINH, CMND_CCCD, EMAIL, SDT, NGAYLAMHOPDONG, DAXOA)
VALUES 
('S001', 1, N'Nguyễn Văn An', 1, 123456789, 'an@example.com', '0987654321', '2024-09-01', 0),
('S002', 2, N'Trần Thị Bình', 0, 987654321, 'binh@example.com', '0912345678', '2024-09-02', 0),
('S003', 3, N'Lê Văn Cường', 1, 234567890, 'cuong@example.com', '0923456789', '2024-09-03', 0),
('S004', 4, N'Nguyễn Thị Duyên', 0, 345678901, 'duyen@example.com', '0934567890', '2024-09-04', 0),
('S005', 5, N'Phạm Văn Đức', 1, 456789012, 'duc@example.com', '0945678901', '2024-09-05', 0),
('S006', 6, N'Nguyễn Văn Phát', 1, 567890123, 'fa@example.com', '0956789012', '2024-09-06', 0),
('S007', 7, N'Trần Thị Giang', 0, 678901234, 'giang@example.com', '0967890123', '2024-09-07', 0),
('S008', 8, N'Lê Văn Hòa', 1, 789012345, 'hoa@example.com', '0978901234', '2024-09-08', 0),
('S009', 9, N'Nguyễn Thị Hương', 0, 890123456, 'huong@example.com', '0989012345', '2024-09-09', 0),
('S010', 10, N'Phạm Văn Huy', 1, 901234567, 'huy@example.com', '0990123456', '2024-09-10', 0);

--Nhập dữ liệu mẫu bảng ThanNhan
INSERT INTO THANNHAN (MASV, TENTN, SDT, QUANHE)
VALUES 
('S001', N'Nguyễn Văn B', '0912345678', N'Cha'),
('S001', N'Nguyễn Thị Lan', '0987654321', N'Mẹ'),
('S002', N'Trần Văn Minh', '0901234567', N'Cha'),
('S002', N'Trần Thị Hương', '0934567890', N'Mẹ'),
('S003', N'Lê Văn Hải', '0976543210', N'Cha'),
('S004', N'Nguyễn Văn An', '0919876543', N'Cha'),
('S004', N'Nguyễn Thị Mai', '0923456789', N'Mẹ'),
('S005', N'Phạm Văn Tùng', '0931234567', N'Cha'),
('S006', N'Nguyễn Văn Phúc', '0945678901', N'Cha'),
('S010', N'Phạm Thị Lan', '0956789012', N'Mẹ');

-- PROCEDURE
-- 1. CAP NHAT TRANG THAI PHONG
CREATE PROCEDURE PROC_CAPNHATTRANGTHAIPHONG (@ID_PHONG INT, @TRANGTHAI BIT)
AS
BEGIN
    UPDATE PHONG
    SET TRANGTHAI = @TRANGTHAI
    WHERE ID_PHONG = @ID_PHONG
END

-- 2. TIM NHAN VIEN THEO MANV
CREATE PROCEDURE PROC_GetNhanVienByMaNV
    @MaNV CHAR(5)
AS
BEGIN
    SELECT *
    FROM NHANVIEN
    WHERE MANV = @MaNV;
END

-- 3. Cập nhật số lượng sinh viên trong phòng
CREATE PROCEDURE PROC_CapNhatSoLuongSinhVienPhong
	@ID_PHONG INT
AS
BEGIN
	DECLARE @SoLuong INT;
	SELECT @SoLuong = COUNT(*) FROM SINHVIEN WHERE ID_PHONG = @ID_PHONG;
	
	UPDATE PHONG
	SET SOLUONGSV = @SoLuong
	WHERE ID_PHONG = @ID_PHONG;
END

-- 4. THEM MOI 1 SINH VIEN VAO BANG
CREATE PROCEDURE PROC_ThemSinhVien
    @MaSV CHAR(5),
    @ID_PHONG INT,
    @TenSV NVARCHAR(40),
    @GioiTinh BIT,
    @CMND_CCCD INT,
    @Email VARCHAR(40),
    @SDT INT,
    @NgayLamHopDong DATETIME
AS
BEGIN
    INSERT INTO SINHVIEN (MASV, ID_PHONG, TENSV, GIOITINH, CMND_CCCD, EMAIL, SDT, NGAYLAMHOPDONG)
    VALUES (@MaSV, @ID_PHONG, @TenSV, @GioiTinh, @CMND_CCCD, @Email, @SDT, @NgayLamHopDong)
END
GO

-- 5. KIEM TRA TINH TRANG PHONG
CREATE PROCEDURE CheckRoomStatus
    @IDPHONG INT
AS
BEGIN
    DECLARE @Available BIT;

    SELECT @Available = CASE 
                           WHEN SOLUONGSV > 0 THEN 1 
                           ELSE 0 
                        END
    FROM PHONG
    WHERE ID_PHONG = @IDPHONG;

    IF @Available = 1
        SELECT 'Phòng còn chỗ trống' AS Status;
    ELSE
        SELECT 'Phòng đã đầy' AS Status;
END;


-- FUNCTION
-- 1. TINH TIEN DIEN NUOC
CREATE FUNCTION FUNC_TINHTIENDIENNUOC (@CHISODAU INT, @CHISOCUOI INT, @DONGIA INT)
RETURNS INT
AS
BEGIN
    RETURN (@CHISOCUOI - @CHISODAU) * @DONGIA;
END

-- 2. DEM SO LUONG SINH VIEN TRONG PHONG
CREATE FUNCTION FUNC_SoLuongSinhVienTrongPhong (@ID_PHONG INT)
RETURNS INT
AS
BEGIN
    DECLARE @SoLuongSinhVien INT;

    SELECT @SoLuongSinhVien = COUNT(*)
    FROM SINHVIEN
    WHERE ID_PHONG = @ID_PHONG AND DAXOA = 0;

    RETURN @SoLuongSinhVien;
END;

-- 3. Kiểm tra phòng có trống hay không
CREATE FUNCTION FUNC_KiemTraPhongTrong
	(@ID_PHONG INT)
RETURNS BIT
AS
BEGIN
	DECLARE @PhongTrong BIT;
	
	-- Kiểm tra xem phòng có sinh viên nào đang ở hay không
	SELECT @PhongTrong = CASE 
		WHEN EXISTS (SELECT 1 FROM SINHVIEN WHERE ID_PHONG = @ID_PHONG) 
		THEN 0 -- Không trống (có sinh viên ở)
		ELSE 1 -- Trống (không có sinh viên ở)
	END;

	RETURN @PhongTrong;
END

-- 4. LAY SO DIEN THOAI CUA SINH VIEN TU BANG SINHVIEN DUA VAO MASV
CREATE FUNCTION FUNC_LaySoDienThoaiSinhVien
    (@MaSV CHAR(5))
RETURNS INT
AS
BEGIN
    DECLARE @SDT INT;
    SELECT @SDT = SDT FROM SINHVIEN WHERE MASV = @MaSV;
    RETURN @SDT;
END
GO

-- 5. SO LUONG SINH VIEN
CREATE FUNCTION SOLUONGSINHVIEN()
RETURNS INT
BEGIN
	DECLARE @TONG INT
	SELECT @TONG = COUNT(*)
	FROM SINHVIEN

	RETURN @TONG
END

--TRIGGER
-- 1. XU LY PHONG DA XOA, NEU PHONG DA XOA SE XOA HET SINH VIEN O PHONG DO
CREATE TRIGGER TRIGGER_XULYXOAPHONG ON PHONG
AFTER UPDATE
AS
BEGIN
    IF UPDATE(DAXOA)
    BEGIN
        DECLARE @ID_PHONG INT
        SELECT @ID_PHONG = INSERTED.ID_PHONG FROM INSERTED 
        
        DELETE FROM SINHVIEN WHERE ID_PHONG = @ID_PHONG;
    END
END

-- 2. KIEM TRA CHISOCUOI PHAI LON HON CHISODAU TRONG BANG CONG TO NUOC
CREATE TRIGGER TRIGGER_CheckChiSoNuoc
ON CONGTONUOC
AFTER INSERT, UPDATE
AS
BEGIN
    DECLARE @chisoDau INT, @chisoCuoi INT

    SELECT @chisoDau = CHISODAU, @chisoCuoi = CHISOCUOI
    FROM INSERTED

    IF (@chisoCuoi < @chisoDau)
    BEGIN
        ROLLBACK TRANSACTION
        RAISERROR ('Chi so cuoi cua cong to nuoc phai lon hon hoac bang chi so dau', 16, 1)
    END
END

-- 3. KIEM TRA CHISOCUOI PHAI LON HON CHISODAU TRONG BANG CONG TO DIEN
CREATE TRIGGER TRIGGER_CheckChiSoDien
ON CONGTODIEN
AFTER INSERT, UPDATE
AS
BEGIN
    DECLARE @chisoDau INT, @chisoCuoi INT

    SELECT @chisoDau = CHISODAU, @chisoCuoi = CHISOCUOI
    FROM INSERTED

    IF (@chisoCuoi < @chisoDau)
    BEGIN
        ROLLBACK TRANSACTION
        RAISERROR ('Chi so cuoi phai lon hon hoac bang chi so dau', 16, 1)
    END
END

-- 4. THEM 1 THAN NHAN MAC DINH CHO SINH VIEN SAU KHI MOT BAN GHI SINH VIEN MOI DUOC THEM VAO BANG SINH VIEN
CREATE TRIGGER TRIGGER_SauKhiThem_SinhVien
ON SINHVIEN
AFTER INSERT
AS
BEGIN
    INSERT INTO THANNHAN (MASV, TENTN, SDT, QUANHE)
    SELECT MASV, N'Cha/Mẹ', 0, N'Bố/mẹ' FROM inserted;
END
GO

-- 5. TU DONG CAP NHAT SO LUONG SINH VIEN TRONG MOI PHONG KHI CO SU THAY DOI
CREATE TRIGGER TRIGGER_CAPNHATSOLUONGHOCSINH ON SINHVIEN
AFTER INSERT, DELETE
AS
BEGIN
	DECLARE @IDPHONG INT;

	IF EXISTS(SELECT * FROM inserted)
	BEGIN
		SET @IDPHONG = (SELECT ID_PHONG FROM inserted)
	END
	ELSE IF EXISTS(SELECT * FROM deleted)
	BEGIN
		SET @IDPHONG=(SELECT ID_PHONG FROM deleted)
	END

	UPDATE PHONG
	SET SOLUONGSV = (SELECT COUNT(*) FROM SINHVIEN WHERE ID_PHONG=@IDPHONG)
	WHERE ID_PHONG=@IDPHONG
END

-- VIEW
-- 1. XEM TINH TRANG CUA CAC PHONG VE VIEC DA XU LY HO TRO HAY CHUA
CREATE VIEW VIEW_TINHTRANG_HOTROPHONG AS
SELECT 
    PHONG.ID_PHONG,
    HOTRO.ID_HOTRO,
    HOTRO.NOIDUNG,
    HOTRO.NGAYGUI,
    HOTRO.TRANGTHAI,
    CASE 
        WHEN HOTRO.TRANGTHAI = 0 THEN 'Chưa xử lý'
        ELSE 'Đã xử lý'
    END AS "Tình trạng xử lý"
FROM HOTRO
JOIN PHONG ON HOTRO.ID_PHONG = PHONG.ID_PHONG;

-- 2. Xem thông tin phòng và số lượng sinh viên
CREATE VIEW VIEW_ThongTinPhongSinhVien
AS
SELECT 
	P.ID_PHONG,
	P.TAIKHOAN AS TaiKhoanPhong,
	P.SOLUONGSV AS SoLuongSinhVien,
	P.TINHTRANG,
	(SELECT COUNT(*) FROM SINHVIEN S WHERE S.ID_PHONG = P.ID_PHONG) AS SoSinhVien
FROM PHONG P;

-- 3. XEM THONG TIN SINH VIEN VA THAN NHAN
CREATE VIEW VIEW_ChiTietSinhVienThanNhan
AS
SELECT 
    SV.MASV AS MaSinhVien, 
    SV.TENSV AS TenSinhVien, 
    CASE 
        WHEN SV.GIOITINH = 1 THEN N'Nam'
        ELSE N'Nữ'
    END AS GioiTinh,
    SV.CMND_CCCD AS CMND_CCCD, 
    SV.EMAIL AS Email, 
    SV.SDT AS SoDienThoaiSinhVien, 
    TN.TENTN AS TenThanNhan, 
    TN.SDT AS SoDienThoaiThanNhan, 
    TN.QUANHE AS QuanHeThanNhan
FROM SINHVIEN SV
LEFT JOIN THANNHAN TN ON SV.MASV = TN.MASV
WHERE SV.DAXOA = 0;

-- 4. VIEW XEM HOA DON DIEN NUOC THEO NAM THANG CUA CAC PHONG
CREATE VIEW VIEW_HoaDonTienDienNuoc AS
SELECT 
    p.MAPHONG,
    hddn.THANG,
    hddn.NAM,
    (cd.CHISOCUOI - cd.CHISODAU) * d.DONGIADIEN AS TongTienDien,
    (cn.CHISOCUOI - cn.CHISODAU) * d.DONGIANUOC AS TongTienNuoc,
    ((cd.CHISOCUOI - cd.CHISODAU) * d.DONGIADIEN) + ((cn.CHISOCUOI - cn.CHISODAU) * d.DONGIANUOC) AS TongGiaTri
FROM HOADON_DIENNUOC hddn
JOIN PHONG p ON hddn.ID_PHONG = p.ID_PHONG
JOIN DONGIA d ON hddn.ID_DONGIA = d.ID_DONGIA
JOIN CONGTODIEN cd ON hddn.ID_DIEN = cd.ID_DIEN
JOIN CONGTONUOC cn ON hddn.ID_NUOC = cn.ID_NUOC
WHERE p.DAXOA = 0;

-- 5. VIEW HOA DON CHUA THANH TOAN
CREATE VIEW VIEW_HOADONCHUATHANHTOAN AS
SELECT
	HOADON_DIENNUOC.ID_HDDN,
	PHONG.MAPHONG,
	HOADON_DIENNUOC.THANG,
	HOADON_DIENNUOC.NAM,
	HOADON_DIENNUOC.TRANGTHAI
FROM HOADON_DIENNUOC
JOIN PHONG ON PHONG.ID_PHONG = HOADON_DIENNUOC.ID_PHONG
WHERE HOADON_DIENNUOC.TRANGTHAI = 0

---------------------------------PROCEDURE, BANG VIEW QUAN TRONG---------------------------------------------
-- 1. BANG VIEW NHAN VIEN
CREATE VIEW VIEW_NHANVIEN AS
SELECT 
    MANV,
    TENNV,
    GIOITINH,
    CMND_CCCD,
    DIACHI,
    EMAIL,
    SDT,
    DAXOA
FROM 
    NHANVIEN
WHERE 
    DAXOA = 0;  -- Chỉ lấy nhân viên chưa bị xóa

-- 2. BANG VIEW HO TRO
CREATE VIEW VIEW_HOTRO AS
SELECT 
    ID_HOTRO,
    HOTRO.ID_PHONG,
	PHONG.MAPHONG,
    HOTRO.NOIDUNG,
    HOTRO.NGAYGUI,
    HOTRO.TRANGTHAI,
    CASE 
        WHEN HOTRO.TRANGTHAI = 0 THEN 'Chưa xử lý'
        ELSE 'Đã xử lý'
    END AS TINHTRANG_XULY
FROM HOTRO
JOIN PHONG ON PHONG.ID_PHONG = HOTRO.ID_PHONG
WHERE 
    HOTRO.DAXOA = 0;  -- Chỉ lấy yêu cầu hỗ trợ chưa bị xóa
	
-- 3.BANG VIEW DON GIA
CREATE VIEW VIEW_DONGIA AS
SELECT 
    MADONGIA,
    DONGIADIEN,
    DONGIANUOC,
    TRANGTHAI,
    NGAYAPDUNG
FROM 
    DONGIA
WHERE 
    DAXOA = 0;  -- Chỉ lấy đơn giá chưa bị xóa

-- 4.BANG VIEW HOA DON DIEN NUOC
CREATE VIEW VIEW_HoaDonDienNuoc AS
SELECT 
    hd.ID_HDDN,
    hd.ID_PHONG,
    hd.ID_DONGIA,
    hd.ID_DIEN,
    hd.ID_NUOC,
    hd.THANG,
    hd.NAM,
    hd.TRANGTHAI,
    dp.MADAYPHONG AS DayPhong,
    phong.MAPHONG AS MaPhong,
	phong.DONGIA AS DonGiaPhong,
    dongia.DONGIADIEN AS DonGiaDien,
    dongia.DONGIANUOC AS DonGiaNuoc,
    dien.CHISODAU AS ChiSoDauDien,
    dien.CHISOCUOI AS ChiSoCuoiDien,
    nuoc.CHISODAU AS ChiSoDauNuoc,
    nuoc.CHISOCUOI AS ChiSoCuoiNuoc
FROM HOADON_DIENNUOC hd
JOIN PHONG phong ON hd.ID_PHONG = phong.ID_PHONG
JOIN DAYPHONG dp ON phong.ID_DAY = dp.ID_DAY
JOIN DONGIA dongia ON hd.ID_DONGIA = dongia.ID_DONGIA
JOIN CONGTODIEN dien ON hd.ID_DIEN = dien.ID_DIEN
JOIN CONGTONUOC nuoc ON hd.ID_NUOC = nuoc.ID_NUOC;

-- 5.BANG VIEW DAY PHONG
CREATE VIEW VIEW_DayPhong AS
SELECT 
    ID_DAY,
    MADAYPHONG
FROM 
    DAYPHONG
WHERE DAXOA = 0

-- 6.BANG VIEW PHONG
CREATE VIEW VIEW_Phong AS
SELECT 
    phong.ID_PHONG,
    phong.ID_DAY,
    phong.MAPHONG,
    phong.TAIKHOAN,
    phong.MATKHAU,
    phong.SOLUONGSV,
    phong.DONGIA,
    phong.TINHTRANG,
    phong.TRANGTHAI,
    phong.MOTAKHAC,
    dp.MADAYPHONG AS DayPhong
FROM 
    PHONG phong
JOIN 
    DAYPHONG dp ON phong.ID_DAY = dp.ID_DAY
WHERE phong.DAXOA = 0

-- 7. BANG VIEW CAN BO
CREATE VIEW VIEW_CANBO AS
SELECT
	ID_CANBO,
	MACB,
	TAIKHOAN,
	TENCB,
	SDT,
	EMAIL
FROM CANBO
WHERE DAXOA = 0

-- 8. BANG VIEW HOA DON PHONG
CREATE VIEW VIEW_HOADONPHONG AS
SELECT 
	DAYPHONG.MADAYPHONG,
	PHONG.MAPHONG,
	HOADON_PHONG.NAM,
	HOADON_PHONG.KY,
	PHONG.DONGIA,
	HOADON_PHONG.THANHTIEN AS THANHTIEN_HOADON_DIENNUOC,
	HOADON_PHONG.THANHTIEN AS THANHTIEN_DONGIAPHONG_HDDN,
	HOADON_PHONG.TRANGTHAI
FROM HOADON_PHONG
JOIN PHONG ON PHONG.ID_PHONG = HOADON_PHONG.ID_PHONG
JOIN DAYPHONG ON DAYPHONG.ID_DAY = PHONG.ID_DAY
JOIN HOADON_DIENNUOC ON HOADON_DIENNUOC.ID_PHONG = PHONG.ID_PHONG

-- 9. BANG VIEW SINH VIEN
CREATE VIEW VIEW_SINHVIEN AS
SELECT
	SINHVIEN.MASV,
	PHONG.MAPHONG,
	SINHVIEN.TENSV,
	SINHVIEN.GIOITINH,
	SINHVIEN.CMND_CCCD,
	SINHVIEN.EMAIL,
	SINHVIEN.SDT,
	SINHVIEN.NGAYLAMHOPDONG
FROM SINHVIEN
JOIN PHONG ON PHONG.ID_PHONG = SINHVIEN.ID_PHONG
WHERE SINHVIEN.DAXOA = 0

-- 10. BANG VIEW THANNHAN
CREATE VIEW VIEW_THANNHAN AS
SELECT
	THANNHAN.TENTN,
	THANNHAN.SDT AS SDT_THANNHAN,
	THANNHAN.QUANHE,
	THANNHAN.MASV,
	SINHVIEN.TENSV,
	SINHVIEN.SDT AS SDT_SINHVIEN,
	SINHVIEN.NGAYLAMHOPDONG
FROM THANNHAN
JOIN SINHVIEN ON SINHVIEN.MASV = THANNHAN.MASV
WHERE SINHVIEN.DAXOA = 0

-- 11. PROCEDURE THEM THAN NHAN
CREATE PROCEDURE PROC_THEMTHANNHAN
    @MASV CHAR(5),
    @TENTN NVARCHAR(40),
    @SDT NVARCHAR(15),
    @QUANHE NVARCHAR(30)
AS
BEGIN
    INSERT INTO THANNHAN (MASV, TENTN, SDT, QUANHE)
    VALUES (@MASV, @TENTN, @SDT, @QUANHE);
END;

-- QUAN TRI NGUOI DUNG
-- NHOM QUYEN ROLE NHAN VIEN
USE QL_KYTUCXA

CREATE ROLE NHOMNHANVIEN
GRANT INSERT, SELECT ON HOTRO TO NHOMNHANVIEN
GRANT INSERT, SELECT ON View_HoaDonDienNuoc TO NHOMNHANVIEN
GRANT INSERT, UPDATE, DELETE, SELECT ON SINHVIEN TO NHOMNHANVIEN
GRANT INSERT, UPDATE, DELETE, SELECT ON THANNHAN TO NHOMNHANVIEN

-- NHOM QUYEN ROLE CAN BO
USE QL_KYTUCXA

CREATE ROLE NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_CANBO TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_DayPhong TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_DONGIA TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_HoaDonDienNuoc TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_HOADONPHONG TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_HOTRO TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_NHANVIEN TO NHOMCANBO
GRANT SELECT, INSERT, UPDATE, DELETE ON VIEW_PHONG TO NHOMCANBO

-- TAO LOGIN, USER NHAN VIEN, PHAN QUYEN NHAN VIEN
USE master
CREATE LOGIN NhanVien WITH PASSWORD = 'nv123';

USE QL_KYTUCXA
CREATE USER NhanVien FOR LOGIN NhanVien
ALTER ROLE NHOMNHANVIEN ADD MEMBER NhanVien

-- TAO LOGIN, USER CAN BO, PHAN QUYEN CAN BO
USE master
CREATE LOGIN CanBo WITH PASSWORD = 'cb123';

USE QL_KYTUCXA
CREATE USER CanBo FOR LOGIN CanBo
ALTER ROLE db_owner ADD MEMBER CanBo
ALTER ROLE NHOMCANBO ADD MEMBER CanBo